diff --git a/content/browser/accessibility/accessibility_tree_formatter_utils_mac.mm b/content/browser/accessibility/accessibility_tree_formatter_utils_mac.mm
index 37d54fb830e039077375d1d0c1aefea9bafebc2e..79edc437bead4061da90eb383340333357d3598f 100644
--- a/content/browser/accessibility/accessibility_tree_formatter_utils_mac.mm
+++ b/content/browser/accessibility/accessibility_tree_formatter_utils_mac.mm
@@ -12,9 +12,9 @@ using ui::AXPropertyNode;
 
 extern "C" {
 
-CFTypeRef AXTextMarkerRangeCopyStartMarker(CFTypeRef);
+AXTextMarkerRef AXTextMarkerRangeCopyStartMarker(AXTextMarkerRangeRef);
 
-CFTypeRef AXTextMarkerRangeCopyEndMarker(CFTypeRef);
+AXTextMarkerRef AXTextMarkerRangeCopyEndMarker(AXTextMarkerRangeRef);
 }  // extern "C"
 
 namespace content {
@@ -262,11 +262,11 @@ OptionalNSObject AttributeInvoker::InvokeForAXTextMarkerRange(
     const AXPropertyNode& property_node) const {
   if (property_node.name_or_value == "anchor")
     return OptionalNSObject(static_cast<id>(
-        AXTextMarkerRangeCopyStartMarker(static_cast<CFTypeRef>(target))));
+        AXTextMarkerRangeCopyStartMarker(static_cast<AXTextMarkerRangeRef>(target))));
 
   if (property_node.name_or_value == "focus")
     return OptionalNSObject(static_cast<id>(
-        AXTextMarkerRangeCopyEndMarker(static_cast<CFTypeRef>(target))));
+        AXTextMarkerRangeCopyEndMarker(static_cast<AXTextMarkerRangeRef>(target))));
 
   // Unmatched attribute. No error for a tree dump calls because the tree dump
   // sets generic property filters not depending on a node, so we can be called
